#version 300 es
precision mediump float;
precision mediump int;

in vec3 wnormal;
in vec3 mposition;
out vec4 fragColor[3];
in vec4 wvpposition;
in vec4 prevwvpposition;

vec3 tex_checker(vec3 co, vec3 col1, vec3 col2, float scale)
{
    vec3 p = co * scale;
    float xi = abs(floor(p.x));
    float yi = abs(floor(p.y));
    float zi = abs(floor(p.z));
    bool check = (mod(xi, 2.0) == mod(yi, 2.0)) == (mod(zi, 2.0) != 0.0);
    bvec3 _92 = bvec3(check);
    return vec3(_92.x ? col1.x : col2.x, _92.y ? col1.y : col2.y, _92.z ? col1.z : col2.z);
}

vec2 octahedronWrap(vec2 v)
{
    return (vec2(1.0) - abs(v.yx)) * vec2((v.x >= 0.0) ? 1.0 : -1.0, (v.y >= 0.0) ? 1.0 : -1.0);
}

float packFloat(float f1, float f2)
{
    float index = floor(f1 * 100.0);
    float alpha = clamp(f2, 0.0, 0.999000012874603271484375);
    return index + alpha;
}

void main()
{
    vec3 n = normalize(wnormal);
    vec3 CheckerTexture_Color_res = tex_checker(mposition, vec3(0.800000011920928955078125), vec3(0.20000000298023223876953125), 6.9999980926513671875);
    vec3 basecol = CheckerTexture_Color_res;
    float roughness = 0.0;
    float metallic = 0.0;
    float occlusion = 1.0;
    n /= vec3((abs(n.x) + abs(n.y)) + abs(n.z));
    vec2 _130;
    if (n.z >= 0.0)
    {
        _130 = n.xy;
    }
    else
    {
        _130 = octahedronWrap(n.xy);
    }
    n = vec3(_130.x, _130.y, n.z);
    fragColor[0] = vec4(n.xy, packFloat(metallic, roughness), 1.0 - gl_FragCoord.z);
    fragColor[1] = vec4(basecol, occlusion);
    vec2 posa = ((wvpposition.xy / vec2(wvpposition.w)) * 0.5) + vec2(0.5);
    vec2 posb = ((prevwvpposition.xy / vec2(prevwvpposition.w)) * 0.5) + vec2(0.5);
    vec2 _205 = vec2(posa - posb);
    fragColor[2] = vec4(_205.x, _205.y, fragColor[2].z, fragColor[2].w);
}

